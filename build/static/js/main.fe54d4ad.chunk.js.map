{"version":3,"sources":["serviceWorker.js","index.js","actions/game.js","actions/index.js","reducers/users.js","reducers/game.js","reducers/index.js","utils/apiClient.js","config.js","sagas/game.js","sagas/index.js","store.js","App.jsx","MainWrapper.jsx","containers/GameHeader/index.jsx","containers/Scores/index.jsx","components/Layout/index.jsx","components/NotFound404/index.jsx","components/Cell/index.jsx","components/Cell/props.js","containers/Board/index.jsx","containers/Home/index.jsx","Router.jsx"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","setLevel","level","type","payload","setBoard","board","clickCell","x","y","showCell","getNextGame","setDifficulty","difficulty","parseInt","setValue","value","Game","initalState","scores","Users","state","action","initialState","scoring","points","timer","cell","show","map","col","row","BASE_URL","ENDPOINT_URL","params","a","token","axios","defaults","headers","common","Authorization","Accept","Object","keys","forEach","k","options","method","toLowerCase","url","path","baseURL","query","length","data","request","Promise","resolve","reject","calculateRowValue","clickedRow","getRandomValue","limit","Math","round","random","select","sides","push","s","console","info","put","Actions","cells","cols","sort","z","delay","generateBoard","colums","rows","bombs","Error","table","temporal","field","key","b","position","splice","requestModule","initAppState","mySaga","call","apiClient","response","dispatchAction","all","error","takeLatest","takeEvery","reducersCombined","combineReducers","reducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","sagas","hot","module","useState","loading","setLoading","dispatch","addEventListener","setTimeout","basename","className","fill","d","MainWrapper","wrapperClass","classNames","wrapper","children","this","props","PureComponent","connect","theme","customizer","GameHeader","useSelector","useDispatch","Row","Col","Form","Group","controlId","Label","Control","as","onChange","evt","target","Scores","ListGroup","Item","name","Layout","setShow","Container","Modal","onHide","dialogClassName","aria-labelledby","Header","closeButton","Title","id","Body","NotFound404","Cell","propTypes","number","bool","onClickHandle","Button","onClick","Board","boardGame","Home","wrappedRoutes","exact","component","Router"],"mappings":"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","file":"static/js/main.fe54d4ad.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","export const setLevel = (level) => ({\n  type: 'GAME_SET_LEVEL',\n  payload: {\n    level,\n  },\n});\n\nexport const setDifficulty = (difficulty) => ({\n  type: 'GAME_SET_DIFFICULTY',\n  payload: {\n    difficulty: parseInt(difficulty, 10),\n  },\n});\n\nexport const setBoard = (board) => ({\n  type: 'GAME_SET_BOARD',\n  payload: {\n    board,\n  },\n});\n\nexport const clickCell = (x, y) => ({\n  type: 'GAME_USER_CLICKED',\n  payload: {\n    x,\n    y,\n  },\n});\n\nexport const getNextGame = () => ({\n  type: 'GAME_GET_NEXT_GAME',\n});\n\nexport const setValue = (x, y, value) => ({\n  type: 'GAME_SET_CELL_VALUE',\n  payload: {\n    value,\n    x,\n    y,\n  },\n});\n\nexport const showCell = (x, y) => ({\n  type: 'GAME_SHOW_CELL',\n  payload: {\n    x,\n    y,\n  },\n});\n\n\nexport default {\n  setLevel,\n  setBoard,\n  clickCell,\n  showCell,\n  getNextGame,\n  setDifficulty,\n  setValue,\n};\n","import Game from './game';\n\nexport default {\n  Game,\n};\n","const initalState = {\n  scores: [],\n};\n\nconst Users = (state = initalState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default Users;\n","const initialState = {\n  scoring: 0,\n  level: 1,\n  points: 0,\n  difficulty: 1,\n  board: [],\n  timer: 0,\n};\n\nconst cell = (state = {}, action) => {\n  switch (action.type) {\n    case 'GAME_SHOW_CELL':\n      if (state.x === action.payload.x && state.y === action.payload.y) {\n        return {\n          ...state,\n          show: true,\n        };\n      }\n      return state;\n    case 'GAME_SET_CELL_VALUE':\n      if (state.x === action.payload.x && state.y === action.payload.y) {\n        return {\n          ...state,\n          value: action.payload.value,\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n\nconst game = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GAME_SHOW_CELL':\n      return {\n        ...state,\n        board: state.board.map((col) => col.map((row) => cell(row, action))),\n      };\n\n    case 'GAME_SET_CELL_VALUE':\n      return {\n        ...state,\n        board: state.board.map((col) => col.map((row) => cell(row, action))),\n      };\n\n    case 'GAME_SET_BOARD':\n      return {\n        ...state,\n        board: [...action.payload.board],\n      };\n\n    case 'GAME_SET_DIFFICULTY':\n      return {\n        ...state,\n        difficulty: action.payload.difficulty,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default game;\n","import Users from './users';\nimport Game from './game';\n\nexport default {\n  Users,\n  Game,\n};\n","import axios from 'axios';\nimport config from '../config';\n\nconst BASE_URL = config.ENDPOINT_URL;\n\nconst headers = (token) => {\n  if (token) axios.defaults.headers.common.Authorization = token;\n  axios.defaults.headers.common.Accept = 'application/json';\n};\n\nexport default async (params) => {\n  headers(params.token || '');\n  if (params.headers) {\n    Object.keys(params.headers).forEach((k) => {\n      (axios.defaults.headers.common[k] = params.headers[k]);\n      return true;\n    });\n  }\n\n  const options = {\n    method: params.method.toLowerCase(),\n    url: params.path,\n    baseURL: BASE_URL,\n  };\n  if (params.query && Object.keys(params.query).length > 0) options.params = { ...params.query };\n  if (params.data && Object.keys(params.data).length > 0) options.data = { ...params.data };\n  try {\n    const data = await axios.request(options);\n    return Promise.resolve(data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n","const configDev = {\n  ENDPOINT_URL: 'https://somedomain.com',\n};\n\n\nconst configProd = {\n  ENDPOINT_URL: 'https://somedomain.com',\n};\n\nexport default process.env.NODE_ENV === 'development' ? configDev : configProd;\n","import {\n  put,\n  select,\n  delay,\n} from 'redux-saga/effects';\n\nimport Actions from '../actions';\n\nconst getRandomValue = (limit) => Math.round(Math.random() * limit);\n\nfunction* calculateRowValue(y, x) {\n  const state = yield select();\n  const { board } = state.Game;\n  let value = 0;\n  const sides = [];\n  if (board[x - 1] && board[x - 1][y - 1]) sides.push({ x: x - 1, y: y - 1 });\n  if (board[x] && board[x][y - 1]) sides.push({ x, y: y - 1 });\n  if (board[x + 1] && board[x + 1][y - 1]) sides.push({ x: x + 1, y: y - 1 });\n\n  if (board[x - 1] && board[x - 1][y]) sides.push({ x: x - 1, y });\n  if (board[x + 1] && board[x + 1][y]) sides.push({ x: x + 1, y });\n\n  if (board[x - 1] && board[x - 1][y + 1]) sides.push({ x: x - 1, y: y + 1 });\n  if (board[x] && board[x][y + 1]) sides.push({ x, y: y + 1 });\n  if (board[x + 1] && board[x + 1][y + 1]) sides.push({ x: x + 1, y: y + 1 });\n\n  sides.forEach((s) => {\n    if (board[s.x][s.y].value === -1) value += 1;\n  });\n  return value;\n}\n\nexport function* clickedRow(action) {\n  const state = yield select();\n  const {\n    x,\n    y,\n  } = action.payload;\n\n  const { board } = state.Game;\n  const cell = board[x][y];\n  console.info(x, y, board[x][y]);\n  if (cell.value === -1) {\n    console.info('is a bomb!');\n    yield put(Actions.Game.showCell(x, y));\n    let cells = [];\n    board.forEach((cols) => {\n      cols.forEach((row) => {\n        if (row.value === -1) {\n          cells.push(row);\n        }\n      });\n    });\n    cells = cells.sort(() => 0.5 - Math.random());\n    for (let z = 0; z < cells.length; z += 1) {\n      const row = cells[z];\n      yield delay(Math.round(Math.random() * 100));\n      yield put(Actions.Game.showCell(row.x, row.y));\n    }\n    return true;\n  }\n\n  const value = yield calculateRowValue(x, y);\n  yield put(Actions.Game.setValue(x, y, value));\n  yield put(Actions.Game.showCell(x, y));\n  return false;\n}\n\nfunction generateBoard(colums = 1, rows = 1, bombs = 1) {\n  if ((colums * rows) <= bombs) throw new Error('invalid bombs');\n\n  const table = [];\n  const temporal = [];\n  for (let y = 0; y < colums; y += 1) {\n    const field = [];\n    for (let x = 0; x < rows; x += 1) {\n      field.push({\n        value: 0,\n        show: false,\n        key: `key-${x}-${y}`,\n        x,\n        y,\n      });\n      temporal.push({ y, x });\n    }\n    field.key = y;\n    table.push(field);\n  }\n\n  for (let b = 0; b < bombs; b += 1) {\n    const position = getRandomValue(temporal.length - 1);\n    table[temporal[position].y][temporal[position].x].value = -1;\n    temporal.splice(position, 1);\n  }\n\n  for (let y = 0; y < colums; y += 1) {\n    for (let x = 0; x < rows; x += 1) {\n      if (table[y][x].value > -1) calculateRowValue(table, y, x, colums, rows);\n    }\n  }\n  return table;\n}\n\n\nfunction* getNextGame() {\n  const state = yield select();\n  const {\n    difficulty,\n  } = state.Game;\n  const total = difficulty * 5 * difficulty * 5;\n  const table = generateBoard(difficulty * 5, difficulty * 5, total * 0.3);\n  yield put(Actions.Game.setBoard(table));\n}\nexport default getNextGame;\n","import {\n  call,\n  put,\n  all,\n  takeEvery,\n  takeLatest,\n  select,\n} from 'redux-saga/effects';\n\nimport apiClient from '../utils/apiClient';\n\nimport getNextGame, { clickedRow } from './game';\n\nfunction* requestModule(action) {\n  try {\n    const token = yield select((state) => state.Users.token);\n    yield put({ type: 'FETCH_INIT' });\n\n    const params = {\n      token,\n      method: action.options.method || 'get',\n      path: action.options.path || '/',\n      query: action.query,\n      data: action.data,\n      ...action.payload,\n    };\n\n    const response = yield call(apiClient, params);\n    if (action.dispatchAction) {\n      yield put({ type: action.dispatchAction, payload: response });\n    }\n\n    yield put({ type: 'FETCH_REQUEST_END' });\n  } catch (e) {\n    console.info(e);\n  }\n}\n\nfunction* initAppState() {\n  try {\n    yield all([\n      getNextGame(),\n    ]);\n  } catch (e) {\n    console.error('Error initialState: ', e);\n  }\n}\n\n\nfunction* mySaga() {\n  try {\n    yield takeLatest('INIT_APP_STATE', initAppState);\n    yield takeEvery('GAME_USER_CLICKED', clickedRow);\n    yield takeEvery('GAME_GET_NEXT_GAME', getNextGame);\n    yield takeEvery([\n      'UNIVERSAL_FETCH',\n    ], requestModule);\n  } catch (err) {\n    console.error('mySaga Error: ', err);\n  }\n}\n\n\nexport default mySaga;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport logger from 'redux-logger';\r\n\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst reducersCombined = combineReducers(reducers);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  reducersCombined,\r\n  applyMiddleware(sagaMiddleware, logger),\r\n);\r\n\r\nsagaMiddleware.run(sagas);\r\n\r\n\r\nexport default store;\r\n","import React, {\r\n  useState,\r\n} from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { hot } from 'react-hot-loader';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './scss/app.scss';\r\n\r\nimport Router from './Router';\r\nimport store from './store';\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  store.dispatch({\r\n    type: 'INIT_APP_STATE',\r\n  });\r\n  window.addEventListener('load', () => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  });\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter basename=\"/\">\r\n        {loading && (\r\n          <div className={`load${loading ? '' : ' loaded'}`}>\r\n            <div className=\"load__icon-wrap\">\r\n              <svg className=\"load__icon\">\r\n                <path fill=\"#4ce1b6\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!loading && (\r\n          <Router />\r\n        )}\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\n\r\nexport default hot(module)(App);\r\n","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MainWrapper extends PureComponent {\r\n  static propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const wrapperClass = classNames({\r\n      wrapper: true,\r\n    });\r\n\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n        <div className={wrapperClass}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  theme: state.theme,\r\n  customizer: state.customizer,\r\n}))(MainWrapper);\r\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  Row,\n  Col,\n  Form,\n} from 'react-bootstrap';\n\nimport Actions from '../../actions';\n\nconst GameHeader = () => {\n  const scoring = useSelector((state) => state.Game.scoring);\n  const timer = useSelector((state) => state.Game.timer);\n  const dispatch = useDispatch();\n  const doChange = (value) => {\n    dispatch(Actions.Game.setDifficulty(value));\n    dispatch(Actions.Game.getNextGame());\n  };\n  return (\n    <header className=\"gameHeader\">\n      <Row>\n        <Col>\n          <Form>\n            <Form.Group controlId=\"gameHeaderForm.Difficulty\">\n              <Form.Label>Difficulty</Form.Label>\n              <Form.Control as=\"select\" onChange={(evt) => doChange(evt.target.value)}>\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n              </Form.Control>\n            </Form.Group>\n          </Form>\n        </Col>\n        <Col>\n          <Row>{`Scoring: ${scoring}`}</Row>\n        </Col>\n        <Col>\n          <Row>{`Timer: ${timer}`}</Row>\n        </Col>\n      </Row>\n    </header>\n  );\n};\n\nexport default GameHeader;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport {\n  ListGroup,\n} from 'react-bootstrap';\n\nconst Scores = () => {\n  const scores = useSelector((state) => state.Users.Scores);\n\n  return (\n    <ListGroup>\n      {scores.map((s) => (\n        <ListGroup.Item>{`${s.name}: ${s.scoring}`}</ListGroup.Item>\n      ))}\n\n    </ListGroup>\n  );\n};\n\nexport default Scores;\n","import React, {\n  useState,\n} from 'react';\n\nimport {\n  Container,\n  Modal,\n} from 'react-bootstrap';\n\nimport GameHeader from '../../containers/GameHeader';\nimport Scores from '../../containers/Scores';\n\nimport propTypes from './props';\n\nconst Layout = ({ children }) => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <Container>\n      <GameHeader />\n      {children}\n      <Modal\n        show={show}\n        onHide={() => setShow(false)}\n        dialogClassName=\"modal-90w\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n            New Domain\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Scores />\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n};\n\nLayout.propTypes = propTypes;\n\nexport default Layout;\n","import React from 'react';\n\nconst NotFound404 = () => (\n  <div>\n    <h1>404</h1>\n  </div>\n);\n\nexport default NotFound404;\n","import React from 'react';\n\nimport {\n  Button,\n} from 'react-bootstrap';\n\nimport props from './props';\n\nconst Cell = ({\n  onClickHandle,\n  data,\n}) => {\n  const {\n    value,\n    show,\n    x,\n    y,\n  } = data;\n  if (show) {\n    return (\n      <span className=\"game-cell fill\">{`${value === -1 ? '*' : value}`}</span>\n    );\n  }\n  return (\n    <Button\n      className=\"game-cell\"\n      onClick={() => onClickHandle(x, y)}\n    />\n  );\n};\n\nCell.propTypes = props;\n\nexport default Cell;\n","import propTypes from 'prop-types';\n\nexport default {\n  value: propTypes.number,\n  show: propTypes.bool,\n};\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  Col,\n  Row,\n} from 'react-bootstrap';\n\nimport Actions from '../../actions';\nimport Cell from '../../components/Cell';\n\nlet key = 0;\nconst getNextId = () => {\n  key += 1;\n  return key;\n};\n\nconst Board = () => {\n  const boardGame = useSelector((state) => state.Game.board);\n  const dispatch = useDispatch();\n\n  const onClickHandle = (x, y) => dispatch(Actions.Game.clickCell(x, y));\n  return (\n    <Col>\n      <Row>\n        {boardGame.map((col) => (\n          <Col\n            key={`col-${getNextId()}`}\n          >\n            {col.map((row) => (\n              <Row key={row.key}>\n                <Cell\n                  data={row}\n                  onClickHandle={onClickHandle}\n                />\n              </Row>\n            ))}\n          </Col>\n        ))}\n      </Row>\n    </Col>\n  );\n};\n\nexport default Board;\n","import React from 'react';\n\nimport Board from '../Board';\n\nconst Home = () => (\n  <Board />\n);\n\nexport default Home;\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport MainWrapper from './MainWrapper';\r\n\r\nimport Layout from './components/Layout';\r\nimport NotFound404 from './components/NotFound404';\r\nimport Home from './containers/Home';\r\n\r\nconst wrappedRoutes = () => (\r\n  <div>\r\n    <Layout>\r\n      <Route exact path=\"/\" component={Home} />\r\n    </Layout>\r\n  </div>\r\n);\r\n\r\nconst Router = () => (\r\n  <MainWrapper>\r\n    <main>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={wrappedRoutes} />\r\n        <Route path=\"/404\" component={NotFound404} />\r\n      </Switch>\r\n    </main>\r\n  </MainWrapper>\r\n);\r\n\r\nexport default Router;\r\n"],"sourceRoot":""}